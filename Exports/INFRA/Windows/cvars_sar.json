[{"flags": 0, "flagsStr": "none", "helpStr": "sar_exit - removes all function hooks, registered commands and unloads the module\n", "isCommand": true, "name": "sar_exit"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_rename <name> - changes your name\n", "isCommand": true, "name": "sar_rename"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cvarlist - lists all SAR cvars and unlocked engine cvars\n", "isCommand": true, "name": "sar_cvarlist"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cvars_unlock - unlocks all special cvars\n", "isCommand": true, "name": "sar_cvars_unlock"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cvars_lock - restores default flags of unlocked cvars\n", "isCommand": true, "name": "sar_cvars_lock"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cvars_dump_doc - dumps all SAR cvars to a file\n", "isCommand": true, "name": "sar_cvars_dump_doc"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cvars_dump [all|game|sar] - dumps all cvars to a file\n", "isCommand": true, "name": "sar_cvars_dump"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_about - prints info about SAR plugin\n", "isCommand": true, "name": "sar_about"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_session - prints the current tick of the server since it has loaded\n", "isCommand": true, "name": "sar_session"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_con_filter_debug - print the console filter rule list\n", "isCommand": true, "name": "sar_con_filter_debug"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_con_filter_reset - clear the console filter rule list\n", "isCommand": true, "name": "sar_con_filter_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_con_filter_block <string> [end] - add a disallow rule to the console filter, blocking until 'end' is matched\n", "isCommand": true, "name": "sar_con_filter_block"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_con_filter_allow <string> [end] - add an allow rule to the console filter, allowing until 'end' is matched\n", "isCommand": true, "name": "sar_con_filter_allow"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_font_list - lists all available fonts\n", "isCommand": true, "name": "sar_font_list"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_font_get_name <id> - gets the name of a font from its index\n", "isCommand": true, "name": "sar_font_get_name"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_paint_reseed <seed> - re-seed all paint sprayers in the map to the given value (-9999 to 9999 inclusive)\n", "isCommand": true, "name": "sar_paint_reseed"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_give_betsrighter [n] - gives the player in slot n (0 by default) betsrighter.\n", "isCommand": true, "name": "sar_give_betsrighter"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_give_fly [n] - gives the player in slot n (0 by default) preserved crouchfly.\n", "isCommand": true, "name": "sar_give_fly"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_coop_reset_progress - resets all coop progress\n", "isCommand": true, "name": "sar_coop_reset_progress"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stop <name> - stop recording the current demo and rename it to 'name' (not considering sar_record_prefix)\n", "isCommand": true, "name": "sar_stop"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_demo_replay - play the last recorded or played demo\n", "isCommand": true, "name": "sar_demo_replay"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_nextdemo - plays the next demo in demo queue\n", "isCommand": true, "name": "sar_nextdemo"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_skiptodemo <demoname> - skip demos in demo queue to this demo\n", "isCommand": true, "name": "sar_skiptodemo"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_startdemosfolder <folder name> - plays all the demos in the specified folder by alphabetic order\n", "isCommand": true, "name": "sar_startdemosfolder"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_startdemos <demoname> - improved version of startdemos. Use 'stopdemo' to stop playing demos\n", "isCommand": true, "name": "sar_startdemos"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_demo_blacklist_addcmd <command> - add a command to the demo blacklist\n", "isCommand": true, "name": "sar_demo_blacklist_addcmd"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_echo_nolf <color> <string...> - echo a string to console with a given color and no trailing line feed\n", "isCommand": true, "name": "sar_echo_nolf"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_echo <color> <string...> - echo a string to console with a given color\n", "isCommand": true, "name": "sar_echo"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_chat - open the chat HUD\n", "isCommand": true, "name": "sar_chat"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_update [release|pre|canary] [exit|restart] [force] - update SAR to the latest version. If exit is given, exit the game upon successful update; if force is given, always re-install, even if it may be a downgrade\n", "isCommand": true, "name": "sar_update"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_check_update [release|pre|canary] - check whether the latest version of SAR is being used\n", "isCommand": true, "name": "sar_check_update"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cps_result - prints result of timer checkpoints\n", "isCommand": true, "name": "sar_cps_result"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cps_clear - resets saved times of timer\n", "isCommand": true, "name": "sar_cps_clear"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cps_add - saves current time of timer\n", "isCommand": true, "name": "sar_cps_add"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_avg_result - prints result of average\n", "isCommand": true, "name": "sar_avg_result"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_avg_stop - stops average calculation\n", "isCommand": true, "name": "sar_avg_stop"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_avg_start - starts calculating the average when using timer\n", "isCommand": true, "name": "sar_avg_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_timer_result - prints result of timer\n", "isCommand": true, "name": "sar_timer_result"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_timer_stop - stops timer\n", "isCommand": true, "name": "sar_timer_stop"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_timer_start - starts timer\n", "isCommand": true, "name": "sar_timer_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_teleport_setpos - saves current location for teleportation\n", "isCommand": true, "name": "sar_teleport_setpos"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_teleport [noportals] - teleports the player to the last saved location\n", "isCommand": true, "name": "sar_teleport"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_protocol_send_msg <message> - sends a message over TAS protocol.\n", "isCommand": true, "name": "sar_tas_protocol_send_msg"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_protocol_stop - stops every TAS protocol related connection.\n", "isCommand": true, "name": "sar_tas_protocol_stop"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_protocol_server [port] - starts a TAS protocol server. Port is 6555 by default.\n", "isCommand": true, "name": "sar_tas_protocol_server"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_protocol_connect <ip address> <port> - connect to the TAS protocol server.\nex: '127.0.0.1 5666' - '89.10.20.20 5666'.\n", "isCommand": true, "name": "sar_tas_protocol_connect"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_save_raw - saves a processed version of just processed script\n", "isCommand": true, "name": "sar_tas_save_raw"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_stop - stop TAS playing\n", "isCommand": true, "name": "sar_tas_stop"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_advance - advances TAS playback by one tick\n", "isCommand": true, "name": "sar_tas_advance"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_resume - resumes TAS playback\n", "isCommand": true, "name": "sar_tas_resume"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_pause - pauses TAS playback\n", "isCommand": true, "name": "sar_tas_pause"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_replay - replays the last played TAS\n", "isCommand": true, "name": "sar_tas_replay"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_play_single <filename> [slot] - plays a single coop TAS script, giving the player control of the other slot.\n", "isCommand": true, "name": "sar_tas_play_single"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_tas_play <filename> [filename2] - plays a TAS script with given name. If two script names are given, play coop\n", "isCommand": true, "name": "sar_tas_play"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_sum_result - prints result of summary\n", "isCommand": true, "name": "sar_sum_result"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_sum_stop - stops summary counter\n", "isCommand": true, "name": "sar_sum_stop"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_sum_here - starts counting total ticks of sessions\n", "isCommand": true, "name": "sar_sum_here"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stitcher_reset - reset the stitcher.\n", "isCommand": true, "name": "sar_stitcher_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_strafesync_split - makes a new split\n", "isCommand": true, "name": "sar_strafesync_split"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_strafesync_reset - reset strafe sync session\n", "isCommand": true, "name": "sar_strafesync_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_strafesync_resume - resume strafe sync session\n", "isCommand": true, "name": "sar_strafesync_resume"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_strafesync_pause - pause strafe sync session\n", "isCommand": true, "name": "sar_strafesync_pause"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_print_stats - prints your statistics if those are loaded\n", "isCommand": true, "name": "sar_print_stats"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_import_stats <filePath> - import the stats from the specified .csv file\n", "isCommand": true, "name": "sar_import_stats"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_export_stats <filepath> -  export the stats to the specified path in a .csv file\n", "isCommand": true, "name": "sar_export_stats"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stats_reset - resets all saved stats\n", "isCommand": true, "name": "sar_stats_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stats_velocity_reset - resets velocity peak\n", "isCommand": true, "name": "sar_stats_velocity_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stats_steps_reset - resets total step count\n", "isCommand": true, "name": "sar_stats_steps_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stats_jumps_reset - resets total jump count and jump distance peak\n", "isCommand": true, "name": "sar_stats_jumps_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stats_velocity - prints velocity stats\n", "isCommand": true, "name": "sar_stats_velocity"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stats_steps - prints total amount of steps\n", "isCommand": true, "name": "sar_stats_steps"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_stats_jump - prints jump stats\n", "isCommand": true, "name": "sar_stats_jump"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_autoreset_clear - stop using the autoreset file\n", "isCommand": true, "name": "sar_speedrun_autoreset_clear"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_autoreset_load <file> - load the given file of autoreset timestamps and use it while the speedrun timer is active\n", "isCommand": true, "name": "sar_speedrun_autoreset_load"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_reset_export - reset the log of complete and incomplete runs to be exported\n", "isCommand": true, "name": "sar_speedrun_reset_export"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_export_all <filename> - export the results of many speedruns to the specified CSV file\n", "isCommand": true, "name": "sar_speedrun_export_all"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_recover <ticks|time> - recover a crashed run by resuming the timer at the given time on next load\n", "isCommand": true, "name": "sar_speedrun_recover"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_export <filename> - export the speedrun result to the specified CSV file\n", "isCommand": true, "name": "sar_speedrun_export"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_result - print the speedrun result\n", "isCommand": true, "name": "sar_speedrun_result"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_reset - reset the speedrun timer\n", "isCommand": true, "name": "sar_speedrun_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_resume - resume the speedrun timer\n", "isCommand": true, "name": "sar_speedrun_resume"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_pause - pause the speedrun timer\n", "isCommand": true, "name": "sar_speedrun_pause"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_split - perform a split on the speedrun timer\n", "isCommand": true, "name": "sar_speedrun_split"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_stop - stop the speedrun timer\n", "isCommand": true, "name": "sar_speedrun_stop"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_start - start the speedrun timer\n", "isCommand": true, "name": "sar_speedrun_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_cc_finish - finish the category creator\n", "isCommand": true, "name": "sar_speedrun_cc_finish"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_cc_place - place a trigger-ey rule in the world\n", "isCommand": true, "name": "sar_speedrun_cc_place"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_cc_place_start <rule name> <rule type> [options]... - start placing a trigger-ey rule in the world\n", "isCommand": true, "name": "sar_speedrun_cc_place_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_cc_rule <rule name> <rule type> [options]... - add a rule to the category currently being created\n", "isCommand": true, "name": "sar_speedrun_cc_rule"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_cc_start <category name> [default options]... - start the category creator\n", "isCommand": true, "name": "sar_speedrun_cc_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_reset_categories - delete all custom categories and rules, reverting to the builtin ones\n", "isCommand": true, "name": "sar_speedrun_reset_categories"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_rule_remove <rule> - delete the given speedrun rule\n", "isCommand": true, "name": "sar_speedrun_rule_remove"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_rule_create <name> <type> [option=value]... - create a speedrun rule with the given name, type, and options\n", "isCommand": true, "name": "sar_speedrun_rule_create"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_category_remove_rule <category> <rule> - remove a rule from a speedrun category\n", "isCommand": true, "name": "sar_speedrun_category_remove_rule"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_category_add_rule <category> <rule> - add a rule to a speedrun category\n", "isCommand": true, "name": "sar_speedrun_category_add_rule"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_category_remove <category> - delete the given speedrun category\n", "isCommand": true, "name": "sar_speedrun_category_remove"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_category_create <category> - create a new speedrun category with the given name\n", "isCommand": true, "name": "sar_speedrun_category_create"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_rule [rule] - show information about speedrun rules\n", "isCommand": true, "name": "sar_speedrun_rule"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_category [category] - get or set the speedrun category\n", "isCommand": true, "name": "sar_speedrun_category"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_auto_voidclip_pause <command> - runs the specified command, and automatically voidclip-pauses on the next load\n", "isCommand": true, "name": "sar_auto_voidclip_pause"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "hwait <tick> <command> [args...] - run a command after the given number of host ticks\n", "isCommand": true, "name": "hwait"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "wait_for <tick> <commands> - wait for the amount of ticks specified\n", "isCommand": true, "name": "wait_for"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "wait_to <tick> <commands> - run this command on the specified session tick\n", "isCommand": true, "name": "wait_to"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "wait <tick> <commands> - wait for the amount of ticks specified\n", "isCommand": true, "name": "wait"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_ruler_add <x> <y> <z> <x> <y> <z> - adds a ruler to a set of currently drawn rulers.\n", "isCommand": true, "name": "sar_ruler_add"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_ruler_creator_set - sets the point, progressing the ruler creation process.\n", "isCommand": true, "name": "sar_ruler_creator_set"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_ruler_clear - clear all created rulers\n", "isCommand": true, "name": "sar_ruler_clear"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_inspection_index - sets entity index for inspection\n", "isCommand": true, "name": "sar_inspection_index"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_inspection_export <file_name> - saves recorded entity data to a csv file\n", "isCommand": true, "name": "sar_inspection_export"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_inspection_print - prints recorded entity data\n", "isCommand": true, "name": "sar_inspection_print"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_inspection_stop - stops recording entity data\n", "isCommand": true, "name": "sar_inspection_stop"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_inspection_start - starts recording entity data\n", "isCommand": true, "name": "sar_inspection_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_rng_load [filename] - load RNG seed data on next session start. If filename isn't given, use last TAS script path\n", "isCommand": true, "name": "sar_rng_load"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_rng_save [filename] - save RNG seed data to the specified file. If filename isn't given, use last TAS script path\n", "isCommand": true, "name": "sar_rng_save"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_render_finish - stop rendering frames\n", "isCommand": true, "name": "sar_render_finish"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_render_start <file> - start rendering frames to the given video file\n", "isCommand": true, "name": "sar_render_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_compare <trace 1> <trace 2> - compares two given recorded traces and shows where differences occurred.\n", "isCommand": true, "name": "sar_trace_compare"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_export <filename> [trace name] - Export trace data into a csv file.\n", "isCommand": true, "name": "sar_trace_export"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_teleport_eye <tick> [player slot] [trace name] - teleports the player to the eye position at the given trace tick on the given trace (defaults to hovered one or the first one ever made) in the given slot (defaults to 0).\n", "isCommand": true, "name": "sar_trace_teleport_eye"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_teleport_at <tick> [player slot] [trace name] - teleports the player at the given trace tick on the given trace ID (defaults to hovered one or the first one ever made) in the given slot (defaults to 0).\n", "isCommand": true, "name": "sar_trace_teleport_at"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_clear_all - Clear all the traces\n", "isCommand": true, "name": "sar_trace_clear_all"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_clear <name> - Clear player trace with a given name\n", "isCommand": true, "name": "sar_trace_clear"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_dump <tick> [player slot] [trace name] - dump the player state from the given trace tick on the given trace ID (defaults to 1) in the given slot (defaults to 0).\n", "isCommand": true, "name": "sar_trace_dump"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_show [trace name] - show the trace with the given name\n", "isCommand": true, "name": "sar_trace_show"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_trace_hide [trace name] - hide the trace with the given name\n", "isCommand": true, "name": "sar_trace_hide"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_pp_scan_reset - reset ppscan.\n", "isCommand": true, "name": "sar_pp_scan_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_pp_scan_set - set the ppscan point where you're aiming.\n", "isCommand": true, "name": "sar_pp_scan_set"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_dump_events - dumps all registered game events of the game event manager\n", "isCommand": true, "name": "sar_dump_events"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_vphys_setasleep <hitbox> <asleep> - sets whether the specified havok collision shadow is asleep. Hitboxes:\n0 - Standing Chell/Atlas\n1 - Crouching Chell/Atlas\n2 - Standing Pbody\n3 - Crouching Pbody\n", "isCommand": true, "name": "sar_vphys_setasleep"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_vphys_setspin <hitbox> <angvel> [component = x] - sets rotation speed for specified havok collision shadow. Hitboxes:\n0 - Standing Chell/Atlas\n1 - Crouching Chell/Atlas\n2 - Standing Pbody\n3 - Crouching Pbody\n", "isCommand": true, "name": "sar_vphys_setspin"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_vphys_setangle <hitbox> <angle> [component = z] - sets rotation angle for specified havok collision shadow. Hitboxes:\n0 - Standing Chell/Atlas\n1 - Crouching Chell/Atlas\n2 - Standing Pbody\n3 - Crouching Pbody\n", "isCommand": true, "name": "sar_vphys_setangle"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_vphys_setgravity <hitbox> <enabled> - sets gravity flag state for specified havok collision shadow. Hitboxes:\n0 - Standing Chell/Atlas\n1 - Crouching Chell/Atlas\n2 - Standing Pbody\n3 - Crouching Pbody\n", "isCommand": true, "name": "sar_vphys_setgravity"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_toast_dismiss_all - dismiss all active toasts\n", "isCommand": true, "name": "sar_toast_dismiss_all"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_toast_net_create <tag> <text> - create a toast, also sending it to your coop partner\n", "isCommand": true, "name": "sar_toast_net_create"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_toast_create <tag> <text> - create a toast\n", "isCommand": true, "name": "sar_toast_create"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_toast_setpos <bottom|top> <left|center|right> - set the position of the toasts HUD\n", "isCommand": true, "name": "sar_toast_setpos"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_toast_tag_dismiss_all <tag> - dismiss all active toasts with the given tag\n", "isCommand": true, "name": "sar_toast_tag_dismiss_all"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_toast_tag_set_duration <tag> <duration> - set the duration of the specified toast tag in seconds. The duration may be given as 'forever'\n", "isCommand": true, "name": "sar_toast_tag_set_duration"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_toast_tag_set_color <tag> <color> - set the color of the specified toast tag to an sRGB color\n", "isCommand": true, "name": "sar_toast_tag_set_color"},
{"flags": 0, "flagsStr": "none", "helpStr": "Clears the performance HUD data.\n", "isCommand": true, "name": "sar_performance_hud_clear"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_minimap_load <filename> - load a minimap from a JSON file.\n", "isCommand": true, "name": "sar_minimap_load"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_lphud_setpos <top|center|bottom|y|y%> <left|center|right|x|x%> - automatically sets the position of least portals HUD.\n", "isCommand": true, "name": "sar_lphud_setpos"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_lphud_reset - resets lp counter\n", "isCommand": true, "name": "sar_lphud_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_lphud_set <number> - sets lp counter to given number\n", "isCommand": true, "name": "sar_lphud_set"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_ihud_clear_background\n", "isCommand": true, "name": "sar_ihud_clear_background"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_ihud_set_background <path> <grid x> <grid y> <grid w> <grid h>\n", "isCommand": true, "name": "sar_ihud_set_background"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_ihud_setpos <top|center|bottom|y|y%> <left|center|right|x|x%> - automatically sets the position of input HUD.\n", "isCommand": true, "name": "sar_ihud_setpos"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_ihud_add_key <key>\n", "isCommand": true, "name": "sar_ihud_add_key"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_ihud_modify <element|all> [param=value]... - modifies parameters in given element.\nParams: enabled, text, pos, x, y, width, height, font, background, highlight, textcolor, texthighlight, image, highlightimage, minhold.\n", "isCommand": true, "name": "sar_ihud_modify"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_ihud_preset <preset> - modifies input hud based on given preset\n", "isCommand": true, "name": "sar_ihud_preset"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_pip_align <top|center|bottom> <left|center|right> - aligns the remote view.\n", "isCommand": true, "name": "sar_pip_align"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_hud_toggle_text <id> - toggles the nth text value in the HUD\n", "isCommand": true, "name": "sar_hud_toggle_text"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_hud_show_text <id|all> - shows the nth text value in the HUD\n", "isCommand": true, "name": "sar_hud_show_text"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_hud_hide_text <id|all> - hides the nth text value in the HUD\n", "isCommand": true, "name": "sar_hud_hide_text"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_hud_set_text_color <id> [color] - sets the color of the nth text value in the HUD. Reset by not giving color.\n", "isCommand": true, "name": "sar_hud_set_text_color"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_hud_set_text <id> <text>... - sets and shows the nth text value in the HUD\n", "isCommand": true, "name": "sar_hud_set_text"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_hud_order_reset - resets order of hud elements\n", "isCommand": true, "name": "sar_hud_order_reset"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_hud_order_bottom <name> - orders hud element to bottom\n", "isCommand": true, "name": "sar_hud_order_bottom"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_hud_order_top <name> - orders hud element to top\n", "isCommand": true, "name": "sar_hud_order_top"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_ehm_hud_refill [slot] - fills EHM debug HUD with slots starting from a given one.\n", "isCommand": true, "name": "sar_ehm_hud_refill"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_ehm_hud_push <slot> - push slot on top of the EHM debug HUD.\n", "isCommand": true, "name": "sar_ehm_hud_push"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_quickhud_set_texture <filepath> - enter the base name, it will search for <filepath>1.png, <filepath>2.png, <filepath>3.png and <filepath>4.png\nex: sar_quickhud_set_texture \"crosshair/basic\" looks for \"crosshair/basic1.png\", etc\n", "isCommand": true, "name": "sar_quickhud_set_texture"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_crosshair_set_texture <filepath>\n", "isCommand": true, "name": "sar_crosshair_set_texture"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_aim_point_clear - clear all frozen aimpoints\n", "isCommand": true, "name": "sar_aim_point_clear"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_aim_point_add - add frozen aimpoint at current position\n", "isCommand": true, "name": "sar_aim_point_add"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_groundframes_reset - reset recorded groundframe statistics.\n", "isCommand": true, "name": "sar_groundframes_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_groundframes_total [slot] - output a summary of groundframe counts for the given player slot.\n", "isCommand": true, "name": "sar_groundframes_total"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_force_viewmodel_fov <fov> - forces viewmodel FOV\n", "isCommand": true, "name": "sar_force_viewmodel_fov"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_force_fov <fov> - forces player FOV\n", "isCommand": true, "name": "sar_force_fov"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_fcps_clear - clear the FCPS event history.\n", "isCommand": true, "name": "sar_fcps_clear"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_fcps_anim_step - step the FCPS animation forward.\n", "isCommand": true, "name": "sar_fcps_anim_step"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_fcps_anim_start <id> - start animating the ID'th FCPS call.\n", "isCommand": true, "name": "sar_fcps_anim_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_ent_slot_serial <id> [value] - prints entity slot serial number, or sets it if additional parameter is specified.\nBanned in most categories, check with the rules before use!\n", "isCommand": true, "name": "sar_ent_slot_serial"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_find_ents <selector> - finds entities in the entity list by class name\n", "isCommand": true, "name": "sar_find_ents"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_ent_info [selector] - show info about the entity under the crosshair or with the given name\n", "isCommand": true, "name": "sar_ent_info"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_list_ents - lists entities\n", "isCommand": true, "name": "sar_list_ents"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_list - list all players in the current ghost server\n", "isCommand": true, "name": "ghost_list"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_debug - output a fuckton of debug info about network ghosts\n", "isCommand": true, "name": "ghost_debug"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_chat - open the chat HUD for messaging other players\n", "isCommand": true, "name": "ghost_chat"},
{"flags": 0, "flagsStr": "none", "helpStr": "Pong!\n", "isCommand": true, "name": "ghost_ping"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_message - send message to other players\n", "isCommand": true, "name": "ghost_message"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_name - change your online name\n", "isCommand": true, "name": "ghost_name"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_disconnect - disconnect\n", "isCommand": true, "name": "ghost_disconnect"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_spec_connect <ip address> <port> - connect to the server as a spectator\nex: 'localhost 53000' - '127.0.0.1 53000' - '89.10.20.20 53000'.\n", "isCommand": true, "name": "ghost_spec_connect"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_connect <ip address> <port> - connect to the server\nex: 'localhost 53000' - '127.0.0.1 53000' - '89.10.20.20 53000'.\n", "isCommand": true, "name": "ghost_connect"},
{"flags": 0, "flagsStr": "none", "helpStr": "Mark a point of interest in the ghost network activity dump.\n", "isCommand": true, "name": "ghost_net_dump_mark"},
{"flags": 0, "flagsStr": "none", "helpStr": "-ghost_list - disable the ghost list HUD\n", "isCommand": true, "name": "-ghost_list"},
{"flags": 0, "flagsStr": "none", "helpStr": "+ghost_list - enable the ghost list HUD\n", "isCommand": true, "name": "+ghost_list"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_leaderboard_reset - reset all leaderboard entries to \"no time\".\n", "isCommand": true, "name": "ghost_leaderboard_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "-ghost_leaderboard - disable the ghost leaderboard HUD\n", "isCommand": true, "name": "-ghost_leaderboard"},
{"flags": 0, "flagsStr": "none", "helpStr": "+ghost_leaderboard - enable the ghost leaderboard HUD\n", "isCommand": true, "name": "+ghost_leaderboard"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_spec_next [samemap] - spectate the next ghost\n", "isCommand": true, "name": "ghost_spec_next"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_spec_prev - spectate the previous ghost\n", "isCommand": true, "name": "ghost_spec_prev"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_spec_pov <name|none> - spectate the specified ghost\n", "isCommand": true, "name": "ghost_spec_pov"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_set_color <hex code> - sets the ghost color to the specified sRGB color code\n", "isCommand": true, "name": "ghost_set_color"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_type <0/1/2/3/4>:\n0: Colored circle\n1: Colored pyramid\n2: Colored pyramid with portal gun (RECORDED IN DEMOS)\n3: Prop model (RECORDED IN DEMOS)\n4: Bendy\n", "isCommand": true, "name": "ghost_type"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_prop_model <filepath> - set the prop model. Example: models/props/metal_box.mdl\n", "isCommand": true, "name": "ghost_prop_model"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_time_demos <demo_name> [demo_name2]... - parses multiple demos and prints the total sum of them\n", "isCommand": true, "name": "sar_time_demos"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_time_demo <demo_name> - parses a demo and prints some information about it\n", "isCommand": true, "name": "sar_time_demo"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_demo_color <color> <ID>  - sets the color of ghost\n", "isCommand": true, "name": "ghost_demo_color"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_offset <offset> <ID> - delay the ghost start by <offset> frames\n", "isCommand": true, "name": "ghost_offset"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_reset - reset ghosts\n", "isCommand": true, "name": "ghost_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_start - start ghosts\n", "isCommand": true, "name": "ghost_start"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_recap - recap all ghosts setup\n", "isCommand": true, "name": "ghost_recap"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_delete_all - delete all ghosts\n", "isCommand": true, "name": "ghost_delete_all"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_delete_by_ID <ID> - delete the ghost selected\n", "isCommand": true, "name": "ghost_delete_by_ID"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_set_demos <first_demo> [first_id] [ID] - ghost will setup a speedrun with first_demo, first_demo_2, etc.\nIf first_id is specified as e.g. 5, will instead start from first_demo_5, then first_demo_6, etc. Specifying first_id as 1 will use first_demo, first_demo_2 etc as normal.\nIf ID is specified, will create or modify the ID-th ghost.\n", "isCommand": true, "name": "ghost_set_demos"},
{"flags": 0, "flagsStr": "none", "helpStr": "ghost_set_demo <demo> [ID] - ghost will use this demo. If ID is specified, will create or modify the ID-th ghost\n", "isCommand": true, "name": "ghost_set_demo"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_dump_client_datamap - dumps client datamap to a file\n", "isCommand": true, "name": "sar_dump_client_datamap"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_dump_server_datamap - dumps server datamap to a file\n", "isCommand": true, "name": "sar_dump_server_datamap"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "nop [args]... - nop ignores all its arguments and does nothing\n", "isCommand": true, "name": "nop"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_function_run <name> [args]... - run a function with the given arguments\n", "isCommand": true, "name": "sar_function_run"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_expand [cmd]... - run a command after expanding svar substitutions\n", "isCommand": true, "name": "sar_expand"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_function <name> [command] [args]... - create a function, replacing $1, $2 etc in the command string with the respective argument, and more. If no command is specified, prints the given function\n", "isCommand": true, "name": "sar_function"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_alias_run <name> [args]... - run a SAR alias, passing on any additional arguments\n", "isCommand": true, "name": "sar_alias_run"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_alias <name> [command] [args]... - create an alias, similar to the 'alias' command but not requiring quoting. If no command is specified, prints the given alias\n", "isCommand": true, "name": "sar_alias"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "seq <commands>... - runs a sequence of commands one tick after one another\n", "isCommand": true, "name": "seq"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_stuck_list - lists commands registered on event \"stuck\"\n", "isCommand": true, "name": "sar_on_stuck_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_stuck_clear - clears commands registered on event \"stuck\"\n", "isCommand": true, "name": "sar_on_stuck_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_stuck <command> [args]... - registers a command to be run when the player gets stuck (singleplayer) (requires cheats)\n", "isCommand": true, "name": "sar_on_stuck"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_renderer_finish_list - lists commands registered on event \"renderer_finish\"\n", "isCommand": true, "name": "sar_on_renderer_finish_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_renderer_finish_clear - clears commands registered on event \"renderer_finish\"\n", "isCommand": true, "name": "sar_on_renderer_finish_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_renderer_finish <command> [args]... - registers a command to be run when renderer finishes\n", "isCommand": true, "name": "sar_on_renderer_finish"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_renderer_start_list - lists commands registered on event \"renderer_start\"\n", "isCommand": true, "name": "sar_on_renderer_start_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_renderer_start_clear - clears commands registered on event \"renderer_start\"\n", "isCommand": true, "name": "sar_on_renderer_start_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_renderer_start <command> [args]... - registers a command to be run when renderer starts\n", "isCommand": true, "name": "sar_on_renderer_start"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_speedrun_finish_list - lists commands registered on event \"speedrun_finish\"\n", "isCommand": true, "name": "sar_on_speedrun_finish_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_speedrun_finish_clear - clears commands registered on event \"speedrun_finish\"\n", "isCommand": true, "name": "sar_on_speedrun_finish_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_speedrun_finish <command> [args]... - registers a command to be run when a speedrun finishes\n", "isCommand": true, "name": "sar_on_speedrun_finish"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_cfg_message_list - lists commands registered on event \"cfg_message\"\n", "isCommand": true, "name": "sar_on_cfg_message_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_cfg_message_clear - clears commands registered on event \"cfg_message\"\n", "isCommand": true, "name": "sar_on_cfg_message_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_cfg_message <command> [args]... - registers a command to be run when partner sends a custom message (_sar_cfg_message svar)\n", "isCommand": true, "name": "sar_on_cfg_message"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_not_pb_list - lists commands registered on event \"not_pb\"\n", "isCommand": true, "name": "sar_on_not_pb_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_not_pb_clear - clears commands registered on event \"not_pb\"\n", "isCommand": true, "name": "sar_on_not_pb_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_not_pb <command> [args]... - registers a command to be run when auto-submitter detects not PB\n", "isCommand": true, "name": "sar_on_not_pb"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_pb_list - lists commands registered on event \"pb\"\n", "isCommand": true, "name": "sar_on_pb_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_pb_clear - clears commands registered on event \"pb\"\n", "isCommand": true, "name": "sar_on_pb_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_pb <command> [args]... - registers a command to be run when auto-submitter detects PB\n", "isCommand": true, "name": "sar_on_pb"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_tas_end_list - lists commands registered on event \"tas_end\"\n", "isCommand": true, "name": "sar_on_tas_end_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_tas_end_clear - clears commands registered on event \"tas_end\"\n", "isCommand": true, "name": "sar_on_tas_end_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_tas_end <command> [args]... - registers a command to be run when TAS script playback ends\n", "isCommand": true, "name": "sar_on_tas_end"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_tas_start_list - lists commands registered on event \"tas_start\"\n", "isCommand": true, "name": "sar_on_tas_start_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_tas_start_clear - clears commands registered on event \"tas_start\"\n", "isCommand": true, "name": "sar_on_tas_start_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_tas_start <command> [args]... - registers a command to be run when TAS script playback starts\n", "isCommand": true, "name": "sar_on_tas_start"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_config_exec_list - lists commands registered on event \"config_exec\"\n", "isCommand": true, "name": "sar_on_config_exec_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_config_exec_clear - clears commands registered on event \"config_exec\"\n", "isCommand": true, "name": "sar_on_config_exec_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_config_exec <command> [args]... - registers a command to be run on config.cfg exec\n", "isCommand": true, "name": "sar_on_config_exec"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_spawn_list - lists commands registered on event \"coop_spawn\"\n", "isCommand": true, "name": "sar_on_coop_spawn_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_spawn_clear - clears commands registered on event \"coop_spawn\"\n", "isCommand": true, "name": "sar_on_coop_spawn_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_spawn <command> [args]... - registers a command to be run on coop spawn\n", "isCommand": true, "name": "sar_on_coop_spawn"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_reset_remote_list - lists commands registered on event \"coop_reset_remote\"\n", "isCommand": true, "name": "sar_on_coop_reset_remote_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_reset_remote_clear - clears commands registered on event \"coop_reset_remote\"\n", "isCommand": true, "name": "sar_on_coop_reset_remote_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_reset_remote <command> [args]... - registers a command to be run when coop reset run remotely\n", "isCommand": true, "name": "sar_on_coop_reset_remote"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_reset_done_list - lists commands registered on event \"coop_reset_done\"\n", "isCommand": true, "name": "sar_on_coop_reset_done_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_reset_done_clear - clears commands registered on event \"coop_reset_done\"\n", "isCommand": true, "name": "sar_on_coop_reset_done_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_coop_reset_done <command> [args]... - registers a command to be run when coop reset is completed\n", "isCommand": true, "name": "sar_on_coop_reset_done"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_flags_list - lists commands registered on event \"flags\"\n", "isCommand": true, "name": "sar_on_flags_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_flags_clear - clears commands registered on event \"flags\"\n", "isCommand": true, "name": "sar_on_flags_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_flags <command> [args]... - registers a command to be run when CM flags are hit\n", "isCommand": true, "name": "sar_on_flags"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_demo_stop_list - lists commands registered on event \"demo_stop\"\n", "isCommand": true, "name": "sar_on_demo_stop_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_demo_stop_clear - clears commands registered on event \"demo_stop\"\n", "isCommand": true, "name": "sar_on_demo_stop_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_demo_stop <command> [args]... - registers a command to be run when demo playback stops\n", "isCommand": true, "name": "sar_on_demo_stop"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_demo_start_list - lists commands registered on event \"demo_start\"\n", "isCommand": true, "name": "sar_on_demo_start_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_demo_start_clear - clears commands registered on event \"demo_start\"\n", "isCommand": true, "name": "sar_on_demo_start_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_demo_start <command> [args]... - registers a command to be run when demo playback starts\n", "isCommand": true, "name": "sar_on_demo_start"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_exit_list - lists commands registered on event \"exit\"\n", "isCommand": true, "name": "sar_on_exit_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_exit_clear - clears commands registered on event \"exit\"\n", "isCommand": true, "name": "sar_on_exit_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_exit <command> [args]... - registers a command to be run on game exit\n", "isCommand": true, "name": "sar_on_exit"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_session_end_list - lists commands registered on event \"session_end\"\n", "isCommand": true, "name": "sar_on_session_end_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_session_end_clear - clears commands registered on event \"session_end\"\n", "isCommand": true, "name": "sar_on_session_end_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_session_end <command> [args]... - registers a command to be run on session end\n", "isCommand": true, "name": "sar_on_session_end"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_load_list - lists commands registered on event \"load\"\n", "isCommand": true, "name": "sar_on_load_list"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_load_clear - clears commands registered on event \"load\"\n", "isCommand": true, "name": "sar_on_load_clear"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_on_load <command> [args]... - registers a command to be run on session start\n", "isCommand": true, "name": "sar_on_load"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "conds [<condition> <command>]... [else] - runs the first command which has a satisfied condition\n", "isCommand": true, "name": "conds"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "cond <condition> <command> [args]... - runs a command only if a given condition is met\n", "isCommand": true, "name": "cond"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_cfg_message <message> - sends a config message to the other player in coop\n", "isCommand": true, "name": "sar_cfg_message"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_get_partner_id - Prints your coop partner's steam id\n", "isCommand": true, "name": "sar_get_partner_id"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_abs <variable> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_abs"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_ceil <variable> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_ceil"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_floor <variable> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_floor"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_round <variable> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_round"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_fmod <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_fmod"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_mod <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_mod"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_fdiv <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_fdiv"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_div <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_div"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_fmul <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_fmul"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_mul <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_mul"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_fsub <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_fsub"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_sub <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_sub"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_fadd <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_fadd"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_add <variable> <variable|value> - perform the given operation on an svar\n", "isCommand": true, "name": "svar_add"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_from_cvar <variable> <cvar> - capture a cvar's value and place it into an svar, removing newlines\n", "isCommand": true, "name": "svar_from_cvar"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_capture <variable> <command> [args]... - capture a command's output and place it into an svar, removing newlines\n", "isCommand": true, "name": "svar_capture"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "Internal SAR command. Do not use\n", "isCommand": true, "name": "_sar_svar_capture_stop"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_no_persist <variable> - unmark an svar as persistent\n", "isCommand": true, "name": "svar_no_persist"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_persist <variable> - mark an svar as persistent\n", "isCommand": true, "name": "svar_persist"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_count - prints a count of all the defined svars\n", "isCommand": true, "name": "svar_count"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_get <variable> - get the value of a svar\n", "isCommand": true, "name": "svar_get"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_substr <variable> <from> [len] - sets a svar to its substring.\n", "isCommand": true, "name": "svar_substr"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "svar_set <variable> <value> - set a svar (SAR variable) to a given value\n", "isCommand": true, "name": "svar_set"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_find_client_class <class_name> - finds specific client class tables and props with their offset\n", "isCommand": true, "name": "sar_find_client_class"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_find_server_class <class_name> - finds specific server class tables and props with their offset\n", "isCommand": true, "name": "sar_find_server_class"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_list_client_classes - lists all client classes\n", "isCommand": true, "name": "sar_list_client_classes"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_list_server_classes - lists all server classes\n", "isCommand": true, "name": "sar_list_server_classes"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_dump_client_classes - dumps all client classes to a file\n", "isCommand": true, "name": "sar_dump_client_classes"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_dump_server_classes - dumps all server classes to a file\n", "isCommand": true, "name": "sar_dump_server_classes"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_reset - resets camera to its default position\n", "isCommand": true, "name": "sar_cam_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_setfov <fov> - sets camera field of view (requires camera Drive Mode)\n", "isCommand": true, "name": "sar_cam_setfov"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_setpos <x> <y> <z> - sets camera position (requires camera Drive Mode)\n", "isCommand": true, "name": "sar_cam_setpos"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_setang <pitch> <yaw> [roll] - sets camera angle (requires camera Drive Mode)\n", "isCommand": true, "name": "sar_cam_setang"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_path_export <filename> [format] [framerate] - exports current camera path to a given file in given format.\nAvailable formats:\nkf - default, exports commands that can be used to recreate camera path. Does not use rate parameter.\nraw - exports a dump of raw camera position for each frame in given framerate (60 by default).\ndavinci - exports a script for DaVinci Resolve's Camera 3D Fusion component based on raw camera dump.\n", "isCommand": true, "name": "sar_cam_path_export"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_path_goto <frame> [skipto] - sends the camera to a specified frame of the camera path. If skipto is 1, goto the tick in the demo.\n", "isCommand": true, "name": "sar_cam_path_goto"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_path_remkfs - removes all camera path keyframes\n", "isCommand": true, "name": "sar_cam_path_remkfs"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_path_remkf <frame> - removes camera path keyframe at specified frame\n", "isCommand": true, "name": "sar_cam_path_remkf"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_path_getkfs - exports commands for recreating currently made camera path\n", "isCommand": true, "name": "sar_cam_path_getkfs"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_path_showkf <frame> - display information about camera path keyframe at specified frame\n", "isCommand": true, "name": "sar_cam_path_showkf"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_cam_path_setkf [frame] [x] [y] [z] [pitch] [yaw] [roll] [fov] - sets the camera path keyframe\n", "isCommand": true, "name": "sar_cam_path_setkf"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_get_mtriggers_map <map=current> <rank=wr> - prints mtriggers of specific run on specific map.\n", "isCommand": true, "name": "sar_speedrun_get_mtriggers_map"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_speedrun_get_mtriggers <rank=wr> - prints mtriggers of specific run.\n", "isCommand": true, "name": "sar_speedrun_get_mtriggers"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_achievement_tracker_reset - resets the status of achievement tracker.\n", "isCommand": true, "name": "sar_achievement_tracker_reset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_achievement_tracker_status - shows achievement completion status.\n", "isCommand": true, "name": "sar_achievement_tracker_status"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_challenge_autosubmit_reload_api_key - reload the boards API key from its file.\n", "isCommand": true, "name": "sar_challenge_autosubmit_reload_api_key"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_geteyepos [slot] - get the view position (portal shooting origin) and view angles of a certain player.\n", "isCommand": true, "name": "sar_geteyepos"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_getpos [slot] [server|client] - get the absolute origin and angles of a particular player from either the server or client. Defaults to slot 0 and server.\n", "isCommand": true, "name": "sar_getpos"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_drawline_clear - clear all active sar_drawlines\n", "isCommand": true, "name": "sar_drawline_clear"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_drawline <x> <y> <z> <x> <y> <z> [r] [g] [b] - overlay a line in the world\n", "isCommand": true, "name": "sar_drawline"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_clear_lines - clears all active drawline overlays\n", "isCommand": true, "name": "sar_clear_lines"},
{"flags": 131072, "flagsStr": "dontrecord", "helpStr": "sar_fast_load_preset <preset> - sets all loading fixes to preset values\n", "isCommand": true, "name": "sar_fast_load_preset"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_delete_alias_cmds - deletes all alias commands\n", "isCommand": true, "name": "sar_delete_alias_cmds"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_autoaim_point <x> <y> <z> - automatically aims at a point in space. Requires cheats\n", "isCommand": true, "name": "sar_autoaim_point"},
{"flags": 0, "flagsStr": "none", "helpStr": "sar_togglewait - enables or disables \"wait\" for the command buffer\n", "isCommand": true, "name": "sar_togglewait"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Only display the SAR HUD for orange, for solo coop (fullscreen PIP).\n", "isCommand": false, "name": "sar_hud_orange_only"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Enable the SAR HUD background.\n", "isCommand": false, "name": "sar_hud_bg"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Whether to suppress blank lines in console\n", "isCommand": false, "name": "sar_con_filter_suppress_blank_lines"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Whether to allow text through the console filter by default\n", "isCommand": false, "name": "sar_con_filter_default"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Enable the console filter\n", "isCommand": false, "name": "sar_con_filter"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Fixes the viewmodel seemingly randomly disappearing.\n", "isCommand": false, "name": "sar_fix_viewmodel_bug"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Output how slow your dialogue fade was.\n", "isCommand": false, "name": "sar_transition_timer"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Allow firing portals through portals.\n", "isCommand": false, "name": "sar_portals_thru_portals"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Always transmit large but seldom changing edicts to clients to prevent lag spikes.\n", "isCommand": false, "name": "sar_always_transmit_heavy_ents"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Fraction to scale mouse DPI down by.\n", "isCommand": false, "min": 1, "name": "sar_dpi_scale"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Automatically create directories for demos if necessary.\n", "isCommand": false, "name": "sar_record_mkdir"},
{"default": "", "flags": 0, "flagsStr": "none", "helpStr": "A string to prepend to recorded demo names. Can include strftime format codes.\n", "isCommand": false, "name": "sar_record_prefix"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Rename demos to (name)_bak if they would be overwritten by recording\n", "isCommand": false, "min": 0, "name": "sar_demo_overwrite_bak"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Fix eye interpolation through portals in demo playback.\n", "isCommand": false, "name": "sar_demo_portal_interp_fix"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Whether to remove broken frames from demo playback\n", "isCommand": false, "name": "sar_demo_remove_broken"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Stop all commands from being run by demo playback.\n", "isCommand": false, "name": "sar_demo_blacklist_all"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Stop a set of commands from being run by demo playback.\n", "isCommand": false, "name": "sar_demo_blacklist"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Make BINK video playback respect host time.\n", "isCommand": false, "name": "sar_bink_respect_host_time"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Fix CM wrongwarp.\n", "isCommand": false, "name": "sar_cm_rightwarp"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Output debugging information to the console related to commands. **Breaks svar_capture**\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_command_debug"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "EXPERIMENTAL - USE AT OWN RISK. Removes the 10-1000 FPS cap on frametime. More info https://wiki.portal2.sr/Frametime\n", "isCommand": false, "name": "sar_frametime_uncap"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Output debugging information to the console related to frametime.\n", "isCommand": false, "name": "sar_frametime_debug"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Output debugging information to the console related to ticks and frames.\n", "isCommand": false, "max": 3, "min": 0, "name": "sar_tick_debug"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Pause for this amount of ticks.\n", "isCommand": false, "min": 0, "name": "sar_pause_for"},
{"default": "-1", "flags": 0, "flagsStr": "none", "helpStr": "Pause at the specified tick. -1 to deactivate it.\n", "isCommand": false, "min": -1, "name": "sar_pause_at"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Increment automatically the demo name.\n", "isCommand": false, "name": "sar_record_at_increment"},
{"default": "chamber", "flags": 0, "flagsStr": "none", "helpStr": "Name of the demo automatically recorded.\n", "isCommand": false, "name": "sar_record_at_demo_name"},
{"default": "-1", "flags": 0, "flagsStr": "none", "helpStr": "Start recording a demo at the tick specified. Will use sar_record_at_demo_name.\n", "isCommand": false, "min": -1, "name": "sar_record_at"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Rainbow portals!\n", "isCommand": false, "name": "sar_portalcolor_rainbow"},
{"default": "57 2 2", "flags": 0, "flagsStr": "none", "helpStr": "Portal color for P-Body (orange)'s right portal.\n", "isCommand": false, "name": "sar_portalcolor_mp2_2"},
{"default": "255 179 31", "flags": 0, "flagsStr": "none", "helpStr": "Portal color for P-Body (orange)'s left portal.\n", "isCommand": false, "name": "sar_portalcolor_mp2_1"},
{"default": "19 0 210", "flags": 0, "flagsStr": "none", "helpStr": "Portal color for Atlas (blue)'s right portal.\n", "isCommand": false, "name": "sar_portalcolor_mp1_2"},
{"default": "31 127 210", "flags": 0, "flagsStr": "none", "helpStr": "Portal color for Atlas (blue)'s left portal.\n", "isCommand": false, "name": "sar_portalcolor_mp1_1"},
{"default": "255 160 32", "flags": 0, "flagsStr": "none", "helpStr": "Portal color for Chell's right portal. r_portal_fastpath 0 required.\n", "isCommand": false, "name": "sar_portalcolor_sp_2"},
{"default": "64 160 255", "flags": 0, "flagsStr": "none", "helpStr": "Portal color for Chell's left portal. r_portal_fastpath 0 required.\n", "isCommand": false, "name": "sar_portalcolor_sp_1"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enable custom portal colors.\n", "isCommand": false, "name": "sar_portalcolor_enable"},
{"default": "-1", "flags": 0, "flagsStr": "none", "helpStr": "Max unlocked chapter.\n", "isCommand": false, "name": "sar_unlocked_chapters"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Patches minor pitch angle decay present on Windows version of the game.\n", "isCommand": false, "name": "sar_patch_minor_angle_decay"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Patches major pitch angle decay. Requires cheats.\n", "isCommand": false, "name": "sar_patch_major_angle_decay"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Patches small angle decay (not minor decay).\n", "isCommand": false, "name": "sar_patch_small_angle_decay"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Disables the saving/saved HUD which appears when you make a save.\n", "isCommand": false, "name": "sar_disable_save_status_hud"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Disables the coop score HUD which appears in demo playback.\n", "isCommand": false, "name": "sar_disable_coop_score_hud"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "EXPERIMENTAL! Forces resizing on game's window.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_allow_resizing_window"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws latest checkpoint of timer.\n", "isCommand": false, "name": "sar_hud_cps"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws calculated average of timer.\n", "isCommand": false, "name": "sar_hud_avg"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws current value of timer.\n", "isCommand": false, "name": "sar_hud_timer"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Timer adds non-simulated ticks when server pauses.\n", "isCommand": false, "name": "sar_timer_time_pauses"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Timer will save current value when disconnecting.\n", "isCommand": false, "name": "sar_timer_always_running"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws current value of pause timer.\n", "isCommand": false, "name": "sar_hud_pause_timer"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Globally disable the 'check' TAS tool.\n", "isCommand": false, "name": "sar_tas_check_disable"},
{"default": "15", "flags": 0, "flagsStr": "none", "helpStr": "Maximum replays for the 'check' TAS tool until it gives up.\n", "isCommand": false, "min": 0, "name": "sar_tas_check_max_replays"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "A number of seconds after which reconnection to TAS protocol server should be made.\n0 means no reconnect attempts will be made.\n", "isCommand": false, "min": 0, "name": "sar_tas_protocol_reconnect_delay"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws current TAS playback tick.\n", "isCommand": false, "name": "sar_hud_tastick"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Preserve client interpolation in TAS playback.\n", "isCommand": false, "name": "sar_tas_interpolate"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Restore fps_max and host_framerate after TAS playback.\n", "isCommand": false, "name": "sar_tas_restore_fps"},
{"default": "1.0", "flags": 0, "flagsStr": "none", "helpStr": "The rate at which to play back TAS scripts.\n", "isCommand": false, "min": 0.019999999552965164, "name": "sar_tas_playback_rate"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Fast-forwards the TAS playback until given playback tick.\n", "isCommand": false, "min": 0, "name": "sar_tas_skipto"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Pauses the TAS playback on specified tick.\n", "isCommand": false, "min": 0, "name": "sar_tas_pauseat"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Enables automatic saving of raw, processed TAS scripts.\n", "isCommand": false, "name": "sar_tas_autosave_raw"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Force tool playback for TAS scripts; primarily for debugging.\n", "isCommand": false, "name": "sar_tas_tools_force"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Enables tool processing for TAS script making.\n", "isCommand": false, "name": "sar_tas_tools_enabled"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Dump player info for each tick of TAS playback to a file.\n", "isCommand": false, "name": "sar_tas_dump_player_info"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Dump TAS-generated usercmds to a file.\n", "isCommand": false, "name": "sar_tas_dump_usercmd"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Debug TAS information. 0 - none, 1 - basic, 2 - all.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_tas_debug"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Debugs controller.\n", "isCommand": false, "max": 4, "min": 0, "name": "sar_tas_real_controller_debug"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Updates the summary counter automatically during a session.\n", "isCommand": false, "name": "sar_sum_during_session"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enable the image stitcher.\n", "isCommand": false, "name": "sar_stitcher"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Only show speedrun starts and splits with matching finishes.\n", "isCommand": false, "name": "sar_timeline_show_completed"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Add split markers to the Steam Timeline.\n", "isCommand": false, "name": "sar_timeline_splits"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "0: Always run.\n1: Do not run when on ground.\n", "isCommand": false, "name": "sar_strafesync_noground"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "In seconds. How much time should pass until session is reset.\nIf 0, you'll have to reset the session manually.\n", "isCommand": false, "min": 0, "name": "sar_strafesync_session_time"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Shows strafe sync stats.\n", "isCommand": false, "name": "sar_strafesync"},
{"default": "Stats/phunkpaiDWPS.csv", "flags": 0, "flagsStr": "none", "helpStr": "Path to the statcounter .csv file.\n", "isCommand": false, "name": "sar_statcounter_filePath"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws last saved velocity peak.\n", "isCommand": false, "name": "sar_hud_velocity_peak"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws longest jump distance.\n", "isCommand": false, "name": "sar_hud_jump_peak"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws current jump distance.\n", "isCommand": false, "name": "sar_hud_jump"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws total step count.\n", "isCommand": false, "name": "sar_hud_steps"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws total portal count.\n", "isCommand": false, "name": "sar_hud_portals"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws total jump count.\n", "isCommand": false, "name": "sar_hud_jumps"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Resets all stats automatically.\n0 = Default,\n1 = Restart or disconnect only,\n2 = Any load & sar_timer_start.\nNote: Portal counter is not part of the \"stats\" feature.\n", "isCommand": false, "min": 0, "name": "sar_stats_auto_reset"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Saves velocity peak as 2D vector.\n", "isCommand": false, "name": "sar_stats_velocity_peak_xy"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Saves jump distance as 2D vector.\n", "isCommand": false, "name": "sar_stats_jumps_xy"},
{"default": "255 176 0", "flags": 0, "flagsStr": "none", "helpStr": "The color of the text that is displayed in the chat.\n", "isCommand": false, "name": "sar_mtrigger_legacy_textcolor"},
{"default": "!seg -> !tt (!st)", "flags": 0, "flagsStr": "none", "helpStr": "Formatting of the text that is displayed in the chat (!map - for map name, !seg - for segment name, !tt - for total time, !st - for split time).\n", "isCommand": false, "name": "sar_mtrigger_legacy_format"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_mtrigger_legacy"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Automatically stop recording demos when a speedrun finishes. If 2, automatically append the run time to the demo name.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_speedrun_autostop"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Start speedruns with this time on the timer.\n", "isCommand": false, "min": 0, "name": "sar_speedrun_offset"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Automatically start the speedrun timer when a map is loaded. 2 = restart if active.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_speedrun_start_on_load"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Automatically stop the speedrun timer when the menu is loaded.\n", "isCommand": false, "name": "sar_speedrun_stop_in_menu"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Include time spent paused in the speedrun timer.\n", "isCommand": false, "name": "sar_speedrun_time_pauses"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Only split the speedrun timer a maximum of once per map.\n", "isCommand": false, "name": "sar_speedrun_smartsplit"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Skip Tube Ride and Long Fall in Portal 2.\n", "isCommand": false, "name": "sar_speedrun_skip_cutscenes"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Draw the triggers associated with speedrun rules in the world.\n", "isCommand": false, "name": "sar_speedrun_draw_triggers"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws last saved frame value.\n", "isCommand": false, "name": "sar_hud_last_frame"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws current frame count.\n", "isCommand": false, "name": "sar_hud_frame"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws summary value of sessions.\n", "isCommand": false, "name": "sar_hud_sum"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws value of latest completed session.\n", "isCommand": false, "name": "sar_hud_last_session"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws current session tick.\n", "isCommand": false, "name": "sar_hud_session"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Disable camera controllers before changing levels to prevent visual glitches.\n", "isCommand": false, "name": "sar_patch_viewcontrol"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Delay for this number of milliseconds at the end of a load.\n", "isCommand": false, "min": 0, "name": "sar_load_delay"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Temporarily set mat_norendering to 1 during loads\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_loads_norender"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Temporarily set fps_max to 0 during loads\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_loads_uncap"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "When the pending commands should be executed. 0 is absolute, 1 is relative to when you entered the wait command.\n", "isCommand": false, "name": "wait_mode"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Whether pending commands should be carried across loads (1) or just be dropped (0).\n", "isCommand": false, "max": 1, "min": 0, "name": "wait_persist_across_loads"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Debugs step slope boosts\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_debug_step_slope_boost"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables seamshot finder overlay.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_seamshot_finder"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables ruler creator\n0 = Ruler creator disabled\n1 = Point-to-point ruler creator\n2 = Player-to-point ruler creator\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_ruler_creator"},
{"default": "16384", "flags": 0, "flagsStr": "none", "helpStr": "Sets maximum trace distance for placing ruler points.\n", "isCommand": false, "max": 16384, "min": 0, "name": "sar_ruler_max_trace_dist"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Sets the drawing mode of the ruler\n0 = rulers are not drawn\n1 = lines, length and angles are drawn (default)\n2 = only lines and length are drawn\n3 = only lines are drawn\n4 = lines, deltas, angles and point origins are drawn\n", "isCommand": false, "max": 4, "min": 0, "name": "sar_ruler_draw"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Aligns ruler creation point to the grid of specified size.\n", "isCommand": false, "max": 1024, "min": 0, "name": "sar_ruler_grid_align"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws entity inspection data.\n", "isCommand": false, "name": "sar_hud_inspection"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Saves inspection data even when session tick does not increment.\n", "isCommand": false, "name": "sar_inspection_save_every_tick"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "When set, don't include coop loading time in renders\n", "isCommand": false, "name": "sar_render_skip_coop_videos"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "When set, merge all the renders until sar_render_finish is entered\n", "isCommand": false, "name": "sar_render_merge"},
{"default": "360", "flags": 0, "flagsStr": "none", "helpStr": "The shutter angle to use for rendering in degrees.\n", "isCommand": false, "max": 360, "min": 30, "name": "sar_render_shutter_angle"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Whether to automatically stop when `__END__` is seen in demo playback\n", "isCommand": false, "name": "sar_render_autostop"},
{"default": "mp4", "flags": 0, "flagsStr": "none", "helpStr": "The file extension (and hence container format) to use for automatically started renders.\n", "isCommand": false, "name": "sar_render_autostart_extension"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Whether to automatically start when demo playback begins\n", "isCommand": false, "name": "sar_render_autostart"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "What type of frameblending to use. 0 = linear, 1 = Gaussian\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_render_blend_mode"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "How many frames to blend for each output frame; 1 = do not blend, 0 = automatically determine based on host_framerate\n", "isCommand": false, "min": 0, "name": "sar_render_blend"},
{"default": "44100", "flags": 0, "flagsStr": "none", "helpStr": "Audio output sample rate\n", "isCommand": false, "min": 1000, "name": "sar_render_sample_rate"},
{"default": "60", "flags": 0, "flagsStr": "none", "helpStr": "Render output FPS\n", "isCommand": false, "min": 1, "name": "sar_render_fps"},
{"default": "35", "flags": 0, "flagsStr": "none", "helpStr": "Render output quality, higher is better (50=lossless)\n", "isCommand": false, "max": 50, "min": 0, "name": "sar_render_quality"},
{"default": "aac", "flags": 0, "flagsStr": "none", "helpStr": "Audio codec used in renders (aac, ac3, vorbis, opus, flac)\n", "isCommand": false, "name": "sar_render_acodec"},
{"default": "h264", "flags": 0, "flagsStr": "none", "helpStr": "Video codec used in renders (h264, hevc, vp8, vp9, dnxhd)\n", "isCommand": false, "name": "sar_render_vcodec"},
{"default": "160", "flags": 0, "flagsStr": "none", "helpStr": "Audio bitrate used in renders (kbit/s)\n", "isCommand": false, "min": 1, "name": "sar_render_abitrate"},
{"default": "40000", "flags": 0, "flagsStr": "none", "helpStr": "Video bitrate used in renders (kbit/s)\n", "isCommand": false, "min": 1, "name": "sar_render_vbitrate"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws info about current trace bbox tick.\n", "isCommand": false, "name": "sar_hud_trace"},
{"default": "100", "flags": 0, "flagsStr": "none", "helpStr": "Opacity of trace portal previews.\n", "isCommand": false, "max": 255, "min": 0, "name": "sar_trace_portal_opacity"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Draw trace portals as ovals rather than rectangles.\n", "isCommand": false, "name": "sar_trace_portal_oval"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Record portal locations.\n", "isCommand": false, "name": "sar_trace_portal_record"},
{"default": "200", "flags": 0, "flagsStr": "none", "helpStr": "Distance from which to capture entity hitboxes.\n", "isCommand": false, "min": 50, "name": "sar_trace_bbox_ent_dist"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Draw hitboxes of nearby entities in the trace.\n", "isCommand": false, "name": "sar_trace_bbox_ent_draw"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Record hitboxes of nearby entities in the trace. You may want to disable this if memory consumption gets too high.\n", "isCommand": false, "name": "sar_trace_bbox_ent_record"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Move trace bbox to hovered trace point tick on given trace.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_trace_bbox_use_hover"},
{"default": "-1", "flags": 0, "flagsStr": "none", "helpStr": "Display a player-sized bbox at the given tick.\n", "isCommand": false, "min": -1, "name": "sar_trace_bbox_at"},
{"default": "3.0", "flags": 0, "flagsStr": "none", "helpStr": "The size of text overlaid on recorded traces.\n", "isCommand": false, "min": 0.10000000149011612, "name": "sar_trace_font_size"},
{"default": "3", "flags": 0, "flagsStr": "none", "helpStr": "Display tick above trace hover info\n0 = hide tick info\n1 = ticks since trace recording started\n2 = session timer\n3 = TAS timer (if no TAS was played, uses 1 instead)\n", "isCommand": false, "max": 3, "min": 0, "name": "sar_trace_draw_time"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Display the speed deltas. Requires sar_trace_draw\n", "isCommand": false, "name": "sar_trace_draw_speed_deltas"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Display the player trace through walls. Requires sar_trace_draw\n", "isCommand": false, "name": "sar_trace_draw_through_walls"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Display information about the trace at the hovered tick.\n", "isCommand": false, "name": "sar_trace_draw_hover"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Display the recorded player trace. Requires cheats\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_trace_draw"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Uses eye offset and angles accurate for portal shooting.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_trace_use_shot_eyeoffset"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Record the trace to a slot. Set to 0 for not recording\n", "isCommand": false, "name": "sar_trace_record"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Clears old trace when you start recording to it instead of recording on top of it.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_trace_override"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Automatically clear the trace on session start\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_trace_autoclear"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Enable sending NetMessages. Disabling this can break other features.\n", "isCommand": false, "name": "sar_netmessage_enable"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Debug NetMessages.\n", "isCommand": false, "name": "sar_netmessage_debug"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Set the volume for the metronome.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_metronome_volume"},
{"default": "ui/ui_coop_hud_unfocus_01", "flags": 0, "flagsStr": "none", "helpStr": "Set the sound to play for the metronome bar.\n", "isCommand": false, "name": "sar_metronome_sound_bar"},
{"default": "ui/ui_coop_hud_focus_01", "flags": 0, "flagsStr": "none", "helpStr": "Set the sound to play for the metronome.\n", "isCommand": false, "name": "sar_metronome_sound"},
{"default": "60", "flags": 0, "flagsStr": "none", "helpStr": "Set the beats per minute for the metronome.\n", "isCommand": false, "max": 1000, "min": 1, "name": "sar_metronome_bpm"},
{"default": "4", "flags": 0, "flagsStr": "none", "helpStr": "Set the number of beats per bar for the metronome.\n", "isCommand": false, "max": 16, "min": 1, "name": "sar_metronome_beats"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enable metronome.\n", "isCommand": false, "name": "sar_metronome"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Prints event data of registered listener.\n", "isCommand": false, "name": "sar_debug_listener"},
{"default": "2", "flags": 0, "flagsStr": "none", "helpStr": "Sets visibility of hitboxes when vphys hud is active.\n0 = hitboxes are not drawn\n1 = only active vphys hitbox is drawn\n2 = active vphys and player's bounding box are drawn\n3 = both vphys hitboxes and player's bounding box are drawn\n", "isCommand": false, "max": 3, "min": 0, "name": "sar_vphys_hud_show_hitboxes"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "The y position of the vphys HUD.\n", "isCommand": false, "min": 0, "name": "sar_vphys_hud_y"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "The x position of the vphys HUD.\n", "isCommand": false, "min": 0, "name": "sar_vphys_hud_x"},
{"default": "3", "flags": 0, "flagsStr": "none", "helpStr": "Sets decimal precision of the vphys HUD.\n", "isCommand": false, "max": 16, "min": 1, "name": "sar_vphys_hud_precision"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Sets font of the vphys HUD.\n", "isCommand": false, "min": 0, "name": "sar_vphys_hud_font"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables the vphys HUD.\n", "isCommand": false, "min": 0, "name": "sar_vphys_hud"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Rainbow mode of velocity graph text.\n", "isCommand": false, "name": "sar_velocitygraph_rainbow"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Show speed between jumps.\n", "isCommand": false, "name": "sar_velocitygraph_show_speed_on_graph"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Background of velocity graph.\n", "isCommand": false, "name": "sar_velocitygraph_background"},
{"default": "-175", "flags": 0, "flagsStr": "none", "helpStr": "Velocity graph y axis offset.\n", "isCommand": false, "name": "sar_velocitygraph_y"},
{"default": "-250", "flags": 0, "flagsStr": "none", "helpStr": "Velocity graph x axis offset.\n", "isCommand": false, "name": "sar_velocitygraph_x"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Shows line for velocity graph.\n", "isCommand": false, "name": "sar_velocitygraph_show_line"},
{"default": "21", "flags": 0, "flagsStr": "none", "helpStr": "Font index of velocity graph.\n", "isCommand": false, "min": 0, "name": "sar_velocitygraph_font_index"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Shows velocity graph.\n", "isCommand": false, "name": "sar_velocitygraph"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Disable network toasts.\n", "isCommand": false, "name": "sar_toast_net_disable"},
{"default": "1", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Sets the background highlight for toasts. 0 = no background, 1 = text width only, 2 = full width.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_toast_background"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Enables a compact form of the toasts HUD.\n", "isCommand": false, "name": "sar_toast_compact"},
{"default": "1", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Where to put new toasts. 0 = bottom, 1 = top.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_toast_anchor"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "The side to align toasts to horizontally. 0 = left, 1 = center, 2 = right.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_toast_align"},
{"default": "10", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "The vertical position of the toasts HUD.\n", "isCommand": false, "min": 0, "name": "sar_toast_y"},
{"default": "10", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "The horizontal position of the toasts HUD.\n", "isCommand": false, "min": 0, "name": "sar_toast_x"},
{"default": "250", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "The maximum width for toasts.\n", "isCommand": false, "min": 22, "name": "sar_toast_width"},
{"default": "6", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "The font index to use for toasts.\n", "isCommand": false, "min": 0, "name": "sar_toast_font"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Disable all toasts from showing.\n", "isCommand": false, "name": "sar_toast_disable"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Font index of strafesync HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_strafesync_font_index"},
{"default": "0 150 250 255", "flags": 0, "flagsStr": "none", "helpStr": "RGBA font color of strafesync HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_strafesync_color"},
{"default": "1050", "flags": 0, "flagsStr": "none", "helpStr": "Y offset of strafesync HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_strafesync_split_offset_y"},
{"default": "1000", "flags": 0, "flagsStr": "none", "helpStr": "Y offset of strafesync HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_strafesync_offset_y"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "X offset of strafesync HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_strafesync_offset_x"},
{"default": "50", "flags": 0, "flagsStr": "none", "helpStr": "The height of the strafe quality HUD.\n", "isCommand": false, "min": 10, "name": "sar_strafe_quality_height"},
{"default": "300", "flags": 0, "flagsStr": "none", "helpStr": "The width of the strafe quality HUD.\n", "isCommand": false, "min": 10, "name": "sar_strafe_quality_width"},
{"default": "40", "flags": 0, "flagsStr": "none", "helpStr": "The number of ticks to average over for the strafe quality HUD.\n", "isCommand": false, "min": 10, "name": "sar_strafe_quality_ticks"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables the strafe quality HUD.\n", "isCommand": false, "name": "sar_strafe_quality"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Lock mode used by strafe hud:\n0 - view direction\n1 - velocity direction\n2 - absolute angles\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_strafehud_lock_mode"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Match the scales for minimum and maximum deceleration.\n", "isCommand": false, "name": "sar_strafehud_match_accel_scale"},
{"default": "60", "flags": 0, "flagsStr": "none", "helpStr": "How many samples to use for average counter.\n", "isCommand": false, "max": 9999, "min": 1, "name": "sar_strafehud_avg_sample_count"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Use ground friction when calculating acceleration.\n", "isCommand": false, "name": "sar_strafehud_use_friction"},
{"default": "4", "flags": 0, "flagsStr": "none", "helpStr": "The detail scale for the lines of hud.\n", "isCommand": false, "name": "sar_strafehud_detail_scale"},
{"default": "13", "flags": 0, "flagsStr": "none", "helpStr": "Font used by strafe hud.\n", "isCommand": false, "name": "sar_strafehud_font"},
{"default": "256", "flags": 0, "flagsStr": "none", "helpStr": "The width and height of the strafe hud.\n", "isCommand": false, "name": "sar_strafehud_size"},
{"default": "10", "flags": 0, "flagsStr": "none", "helpStr": "The Y position of the strafe hud.\n", "isCommand": false, "name": "sar_strafehud_y"},
{"default": "-10", "flags": 0, "flagsStr": "none", "helpStr": "The X position of the strafe hud.\n", "isCommand": false, "name": "sar_strafehud_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables strafe hud.\n", "isCommand": false, "name": "sar_strafehud"},
{"default": "70", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Font index of speedrun timer HUD.\n", "isCommand": false, "min": 0, "name": "sar_sr_hud_font_index"},
{"default": "255 255 255 255", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "RGBA font color of speedrun timer HUD.\n", "isCommand": false, "name": "sar_sr_hud_font_color"},
{"default": "100", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Y offset of speedrun timer HUD.\n", "isCommand": false, "name": "sar_sr_hud_y"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "X offset of speedrun timer HUD.\n", "isCommand": false, "name": "sar_sr_hud_x"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws speedrun timer.\n", "isCommand": false, "min": 0, "name": "sar_sr_hud"},
{"default": "210", "flags": 0, "flagsStr": "none", "helpStr": "Scroll speed bar y offset.\n", "isCommand": false, "name": "sar_scrollspeed_bar_y"},
{"default": "30", "flags": 0, "flagsStr": "none", "helpStr": "Scroll speed bar x offset.\n", "isCommand": false, "name": "sar_scrollspeed_bar_x"},
{"default": "210", "flags": 0, "flagsStr": "none", "helpStr": "Scroll speed HUD y offset.\n", "isCommand": false, "name": "sar_scrollspeed_y"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Scroll speed HUD x offset.\n", "isCommand": false, "name": "sar_scrollspeed_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Show a HUD indicating your scroll speed for coop.\n1 = bar and tiles,\n2 = bar only,\n3 = tiles only.\n", "isCommand": false, "name": "sar_scrollspeed"},
{"default": "64", "flags": 0, "flagsStr": "none", "helpStr": "The font to use for the rhythm game HUD.\n", "isCommand": false, "name": "sar_rhythmgame_font"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Show a combo counter on the rhythm game HUD.\n", "isCommand": false, "name": "sar_rhythmgame_combo"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Show a HUD indicating your groundframes as rhythm game like popups.\n", "isCommand": false, "name": "sar_rhythmgame"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Change font of portal placement hud.\n", "isCommand": false, "min": 0, "name": "sar_pp_hud_font"},
{"default": "100", "flags": 0, "flagsStr": "none", "helpStr": "Opacity of portal previews.\n", "isCommand": false, "max": 255, "min": 0, "name": "sar_pp_hud_opacity"},
{"default": "5", "flags": 0, "flagsStr": "none", "helpStr": "y pos of portal placement hud.\n", "isCommand": false, "name": "sar_pp_hud_y"},
{"default": "5", "flags": 0, "flagsStr": "none", "helpStr": "x pos of portal placement hud.\n", "isCommand": false, "name": "sar_pp_hud_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables orange portal preview.\n", "isCommand": false, "min": 0, "name": "sar_pp_hud_show_orange"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables blue portal preview.\n", "isCommand": false, "min": 0, "name": "sar_pp_hud_show_blue"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables the portals placement HUD.\n", "isCommand": false, "min": 0, "name": "sar_pp_hud"},
{"default": "5", "flags": 0, "flagsStr": "none", "helpStr": "The y position of the portalgun HUD.\n", "isCommand": false, "min": 0, "name": "sar_portalgun_hud_y"},
{"default": "5", "flags": 0, "flagsStr": "none", "helpStr": "The x position of the portalgun HUD.\n", "isCommand": false, "min": 0, "name": "sar_portalgun_hud_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables the portalgun HUD.\n", "isCommand": false, "name": "sar_portalgun_hud"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Visually displays all portal placement helpers (requires sv_cheats).\n", "isCommand": false, "name": "sar_placement_helper_hud"},
{"default": "6", "flags": 0, "flagsStr": "none", "helpStr": "Font index of the performance HUD.\n", "isCommand": false, "name": "sar_performance_hud_font_index"},
{"default": "300", "flags": 0, "flagsStr": "none", "helpStr": "Y position of the performance HUD.\n", "isCommand": false, "name": "sar_performance_hud_y"},
{"default": "20", "flags": 0, "flagsStr": "none", "helpStr": "X position of the performance HUD.\n", "isCommand": false, "name": "sar_performance_hud_x"},
{"default": "60", "flags": 0, "flagsStr": "none", "helpStr": "How long (in frames) to measure performance for.\n", "isCommand": false, "min": 1, "name": "sar_performance_hud_duration"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables the performance HUD.\n1 = normal,\n2 = stats only.\n", "isCommand": false, "name": "sar_performance_hud"},
{"default": "255 0 0 255", "flags": 0, "flagsStr": "none", "helpStr": "The color of the circle representing the player on the minimap.\n", "isCommand": false, "name": "sar_minimap_player_color"},
{"default": "1000", "flags": 0, "flagsStr": "none", "helpStr": "The maximum height of the minimap.\n", "isCommand": false, "name": "sar_minimap_max_height"},
{"default": "500", "flags": 0, "flagsStr": "none", "helpStr": "The maximum width of the minimap.\n", "isCommand": false, "name": "sar_minimap_max_width"},
{"default": "10", "flags": 0, "flagsStr": "none", "helpStr": "The Y position of the minimap.\n", "isCommand": false, "name": "sar_minimap_y"},
{"default": "-10", "flags": 0, "flagsStr": "none", "helpStr": "The X position of the minimap.\n", "isCommand": false, "name": "sar_minimap_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Reset the lp counter on any changelevel or restart_level. Useful for ILs.\n", "isCommand": false, "name": "sar_lphud_reset_on_changelevel"},
{"default": "92", "flags": 0, "flagsStr": "none", "helpStr": "Change font of portal counter.\n", "isCommand": false, "min": 0, "name": "sar_lphud_font"},
{"default": "-10", "flags": 0, "flagsStr": "none", "helpStr": "y pos of lp counter.\n", "isCommand": false, "name": "sar_lphud_y"},
{"default": "-10", "flags": 0, "flagsStr": "none", "helpStr": "x pos of lp counter.\n", "isCommand": false, "name": "sar_lphud_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables the portals display on screen.\n", "isCommand": false, "name": "sar_lphud"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Font index of entity inspection HUD.\n", "isCommand": false, "min": 0, "name": "sar_ei_hud_font_index"},
{"default": "153 23 9 255", "flags": 0, "flagsStr": "none", "helpStr": "RGBA font color of entity inspection HUD when recording.\n", "isCommand": false, "name": "sar_ei_hud_font_color2"},
{"default": "255 255 255 255", "flags": 0, "flagsStr": "none", "helpStr": "RGBA font color of entity inspection HUD when not recording.\n", "isCommand": false, "name": "sar_ei_hud_font_color"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Z offset of entity inspection HUD.\n", "isCommand": false, "min": 0, "name": "sar_ei_hud_z"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Y offset of entity inspection HUD.\n", "isCommand": false, "min": 0, "name": "sar_ei_hud_y"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "X offset of entity inspection HUD.\n", "isCommand": false, "min": 0, "name": "sar_ei_hud_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Draws entity inspection data.\n", "isCommand": false, "min": 0, "name": "sar_ei_hud"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Try to eliminate small fluctuations in the movement analog.\n", "isCommand": false, "name": "sar_ihud_analog_view_deshake"},
{"default": "0.6", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Scale of analog input images against max extent.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_ihud_analog_image_scale"},
{"default": "60", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Grid square size of input HUD.\n", "isCommand": false, "min": 0, "name": "sar_ihud_grid_size"},
{"default": "2", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Padding between grid squares of input HUD.\n", "isCommand": false, "min": 0, "name": "sar_ihud_grid_padding"},
{"default": "-2", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Y position of input HUD.\n", "isCommand": false, "name": "sar_ihud_y"},
{"default": "2", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "X position of input HUD.\n", "isCommand": false, "name": "sar_ihud_x"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Enables or disables movement inputs HUD of client.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_ihud"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Show fps (frames per second) on the SAR hud.\n1 - Show fps\n2 - Show fps with fps cap\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_fps"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draw the serial number of given entity slot.\n", "isCommand": false, "max": 4096, "min": 0, "name": "sar_hud_ent_slot_serial"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draw the player's funnel count (requires sv_cheats).\n", "isCommand": false, "name": "sar_hud_tbeam_count"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draw the name of the funnel player is currently in (requires sv_cheats).\n", "isCommand": false, "name": "sar_hud_tbeam"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draw the state of player ducking.\n1 - shows either ducked or standing state\n2 - shows detailed report (requires sv_cheats)\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_duckstate"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draw the camera angles of the last secondary portal shot.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_portal_angles_2"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draw the camera angles of the last primary portal shot.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_portal_angles"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draw the speed of the player upon leaving the ground.\n", "isCommand": false, "name": "sar_hud_groundspeed"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draw the angle of the player's horizontal velocity vector.\n0 = Default,\n1 = yaw,\n2 = pitch yaw.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_velang"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws player's eye offset.\n0 = Default,\n1 = eye offset including precision error,\n2 = raw eye offset.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_eyeoffset"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws velocity of the client.\n0 = Default,\n1 = X, Y, Z\n2 = X:Y\n3 = X:Y, Z\n4 = X:Y:Z\n5 = X, Y, X:Y, Z\n", "isCommand": false, "max": 5, "min": 0, "name": "sar_hud_velocity"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws absolute view angles of the client.\n0 = Default,\n1 = XY,\n2 = XYZ.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_angles"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws absolute position of the client.\n0 = Default,\n1 = Player position,\n2 = Camera (shoot) position.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_position"},
{"default": "-1", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Enables the rainbow HUD mode. -1 = default, 0 = disable, 1 = enable.\n", "isCommand": false, "max": 1, "min": -1, "name": "sar_hud_rainbow"},
{"default": "2", "flags": 0, "flagsStr": "none", "helpStr": "Precision of velocity HUD numbers.\n", "isCommand": false, "min": 0, "name": "sar_hud_velocity_precision"},
{"default": "2", "flags": 0, "flagsStr": "none", "helpStr": "Precision of HUD numbers.\n", "isCommand": false, "min": 0, "name": "sar_hud_precision"},
{"default": "255 255 255 255", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "RGBA font color of HUD.\n", "isCommand": false, "name": "sar_hud_font_color"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Font index of HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_font_index"},
{"default": "2", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Y padding of HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_y"},
{"default": "2", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "X padding of HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_x"},
{"default": "1", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Spacing between elements of HUD.\n", "isCommand": false, "min": 0, "name": "sar_hud_spacing"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Whether to listen for changed slot and use it to replace the oldest one in EHM debug HUD.\n", "isCommand": false, "name": "sar_ehm_hud_autofill"},
{"default": "20", "flags": 0, "flagsStr": "none", "helpStr": "How many slots to show in the EHM debug HUD.\n", "isCommand": false, "name": "sar_ehm_hud_list_length"},
{"default": "2", "flags": 0, "flagsStr": "none", "helpStr": "Font used by the EHM debug HUD.\n", "isCommand": false, "name": "sar_ehm_hud_font"},
{"default": "10", "flags": 0, "flagsStr": "none", "helpStr": "The Y position of the EHM debug HUD.\n", "isCommand": false, "name": "sar_ehm_hud_y"},
{"default": "-10", "flags": 0, "flagsStr": "none", "helpStr": "The X position of the EHM debug HUD.\n", "isCommand": false, "name": "sar_ehm_hud_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables EHM debug HUD.\n", "isCommand": false, "name": "sar_ehm_hud"},
{"default": "255", "flags": 0, "flagsStr": "none", "helpStr": "Change the amount of transparency.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_quickhud_alpha"},
{"default": "255", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the right quickhud.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_quickhudrightcolor_b"},
{"default": "184", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the right quickhud.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_quickhudrightcolor_g"},
{"default": "111", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the right quickhud.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_quickhudrightcolor_r"},
{"default": "86", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the left quickhud.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_quickhudleftcolor_b"},
{"default": "184", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the left quickhud.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_quickhudleftcolor_g"},
{"default": "255", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the left quickhud.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_quickhudleftcolor_r"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Decides if there is a dot in the middle of the crosshair\n", "isCommand": false, "name": "cl_crosshairdot"},
{"default": "255", "flags": 0, "flagsStr": "none", "helpStr": "Change the amount of transparency.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_crosshairalpha"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Changes the thickness of the crosshair lines.\n", "isCommand": false, "min": 0, "name": "cl_crosshairthickness"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Changes the size of the crosshair.\n", "isCommand": false, "min": -100, "name": "cl_crosshairsize"},
{"default": "255", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the crosshair.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_crosshaircolor_b"},
{"default": "255", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the crosshair.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_crosshaircolor_g"},
{"default": "255", "flags": 0, "flagsStr": "none", "helpStr": "Changes the color of the crosshair.\n", "isCommand": false, "max": 255, "min": 0, "name": "cl_crosshaircolor_r"},
{"default": "9", "flags": 0, "flagsStr": "none", "helpStr": "Changes the distance of the crosshair lines from the center of screen.\n", "isCommand": false, "min": 0, "name": "cl_crosshairgap"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Removes the top line from the crosshair :0: normal crosshair,1: crosshair without top.\n", "isCommand": false, "name": "cl_crosshair_t"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Use the P1 crosshair style.\n", "isCommand": false, "name": "sar_crosshair_P1"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Set the quickhud mode :\n0: Default quickhud\n1: Customizable quickhud\n2: quickhud from .png\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_quickhud_mode"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Set the crosshair mode :\n0: Default crosshair\n1: Customizable crosshair\n2: Crosshair from .png\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_crosshair_mode"},
{"default": "4", "flags": 0, "flagsStr": "none", "helpStr": "Y position of the cheat warning HUD.\n", "isCommand": false, "name": "sar_cheat_hud_y"},
{"default": "-4", "flags": 0, "flagsStr": "none", "helpStr": "X position of the cheat warning HUD.\n", "isCommand": false, "name": "sar_cheat_hud_x"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Display a warning in the HUD when cheats are active. 0 = disable, 1 = display if sv_cheats off, 2 = display always\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_cheat_hud"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Overlays a marker with coordinates at the point you're aiming at\n", "isCommand": false, "name": "sar_aim_point_hud"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws the state of player being on ground.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_hud_grounded"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws the number of ground frames since last landing. Setting it to 2 preserves the value.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_groundframes"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Time between automatic steps of FCPS animation. 0 to disable automatic stepping.\n", "isCommand": false, "min": 0, "name": "sar_fcps_autostep"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Override FCPS for tracing results.\n", "isCommand": false, "name": "sar_fcps_override"},
{"default": "1084419823737524294", "flags": 0, "flagsStr": "none", "helpStr": "Defines Discord Rich Presence's application ID.\n", "isCommand": false, "name": "sar_discord_rpc_app_id"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables Discord Rich Presence integration.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_discord_rpc_enabled"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Dump all ghost network activity to a file for debugging.\n", "isCommand": false, "name": "ghost_net_dump"},
{"default": "50", "flags": 0, "flagsStr": "none", "helpStr": "Milliseconds between ghost updates. For people with slow/metered internet.\n", "isCommand": false, "min": 1, "name": "ghost_update_rate"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Uses only TCP for ghost servers. For people with unreliable internet.\n", "isCommand": false, "name": "ghost_TCP_only"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Font index for ghost list HUD.\n", "isCommand": false, "min": 0, "name": "ghost_list_font"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Show the map name in the ghost list HUD.\n", "isCommand": false, "name": "ghost_list_show_map"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Mode for ghost list HUD. 0 = all players, 1 = current map\n", "isCommand": false, "max": 1, "min": 0, "name": "ghost_list_mode"},
{"default": "-2", "flags": 0, "flagsStr": "none", "helpStr": "Y position of ghost list HUD.\n", "isCommand": false, "name": "ghost_list_y"},
{"default": "2", "flags": 0, "flagsStr": "none", "helpStr": "X position of ghost list HUD.\n", "isCommand": false, "name": "ghost_list_x"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Show chat messages from spectators when not spectating.\n", "isCommand": false, "name": "ghost_show_spec_chat"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Whether to see other spectators while spectating.\n", "isCommand": false, "name": "ghost_spec_see_spectators"},
{"default": "3", "flags": 0, "flagsStr": "none", "helpStr": "The number of seconds of countdown to show at the start of every synced map. 0 to disable.\n", "isCommand": false, "min": 0, "name": "ghost_sync_countdown"},
{"default": "10", "flags": 0, "flagsStr": "none", "helpStr": "The x position of the leaderboard.\n", "isCommand": false, "min": 0, "name": "ghost_leaderboard_y"},
{"default": "10", "flags": 0, "flagsStr": "none", "helpStr": "The x position of the leaderboard.\n", "isCommand": false, "min": 0, "name": "ghost_leaderboard_x"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "The mode for the leaderboard. 0 = CM, 1 = race\n", "isCommand": false, "max": 1, "min": 0, "name": "ghost_leaderboard_mode"},
{"default": "10", "flags": 0, "flagsStr": "none", "helpStr": "The maximum number of names to display on the leaderboard.\n", "isCommand": false, "min": 0, "name": "ghost_leaderboard_max_display"},
{"default": "68", "flags": 0, "flagsStr": "none", "helpStr": "The font to use for the ghost leaderboard.\n", "isCommand": false, "min": 0, "name": "ghost_leaderboard_font"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Show the name of the ghost you're currently spectating.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_hud_ghost_spec"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Whether to draw ghosts through walls. 0 = none, 1 = names, 2 = names and ghosts.\n", "isCommand": false, "max": 2, "min": 0, "name": "ghost_draw_through_walls"},
{"default": "300", "flags": 0, "flagsStr": "none", "helpStr": "The maximum distance from which to spectate in third-person.\n", "isCommand": false, "min": 50, "name": "ghost_spec_thirdperson_dist"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Whether to spectate ghost from a third-person perspective.\n", "isCommand": false, "name": "ghost_spec_thirdperson"},
{"default": "5.0", "flags": 0, "flagsStr": "none", "helpStr": "The size to render ghost names at.\n", "isCommand": false, "min": 0.10000000149011612, "name": "ghost_name_font_size"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Whether to show names above ghosts.\n", "isCommand": false, "name": "ghost_show_names"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Enable simple light level based shading for overlaid ghosts.\n", "isCommand": false, "name": "ghost_shading"},
{"default": "200", "flags": 0, "flagsStr": "none", "helpStr": "Distance from ghosts at which their names fade out.\n", "isCommand": false, "max": 2000, "min": 0, "name": "ghost_name_proximity_fade"},
{"default": "100", "flags": 0, "flagsStr": "none", "helpStr": "Distance from ghosts at which their models fade out.\n", "isCommand": false, "max": 2000, "min": 0, "name": "ghost_proximity_fade"},
{"default": "3", "flags": 0, "flagsStr": "none", "helpStr": "Show the advancement of the ghosts. 1 = show finished runs on the current map, 2 = show all finished runs, 3 = show all finished runs and map changes\n", "isCommand": false, "max": 3, "min": 0, "name": "ghost_show_advancement"},
{"default": "7", "flags": 0, "flagsStr": "none", "helpStr": "Offset of the name over the ghosts.\n", "isCommand": false, "min": -1024, "name": "ghost_text_offset"},
{"default": "255", "flags": 0, "flagsStr": "none", "helpStr": "Opacity of the ghosts.\n", "isCommand": false, "max": 255, "min": 0, "name": "ghost_opacity"},
{"default": "16", "flags": 0, "flagsStr": "none", "helpStr": "Height of the ghosts. (For prop models, only affects their position).\n", "isCommand": false, "min": -256, "name": "ghost_height"},
{"default": "0", "flags": 131072, "flagsStr": "dontrecord", "helpStr": "Draws name, tick and time of current demo.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_hud_demo"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Printing mode when using sar_time_demo.\n0 = Default,\n1 = Console commands,\n2 = Console commands & packets.\n", "isCommand": false, "min": 0, "name": "sar_time_demo_dev"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "When loading a new level, pauses the game until other players load it.\n", "isCommand": false, "name": "ghost_sync"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Draws a representation of the camera path in the world. Disabled in cinematic mode.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_cam_path_draw"},
{"default": "2", "flags": 0, "flagsStr": "none", "helpStr": "Sets interpolation type between keyframes for cinematic camera.\n0 = Linear interpolation\n1 = Cubic spline\n2 = Piecewise Cubic Hermite Interpolating Polynomial (PCHIP)\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_cam_path_interp"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Forces camera to be placed exactly on the player's eye position\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_cam_force_eye_pos"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Changes the near Z plane of orthographic projection.\n", "isCommand": false, "max": 10000, "min": -10000, "name": "sar_cam_ortho_nearz"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Changes the scale of orthographic projection (how many units per pixel).\n", "isCommand": false, "min": 0.0010000000474974513, "name": "sar_cam_ortho_scale"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables camera orthographic projection.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_cam_ortho"},
{"default": "1", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables camera drive mode in-game (turning it on is not required for demo player)\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_cam_drive"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "sar_cam_control <type>: Change type of camera control.\n0 = Default (camera is controlled by game engine),\n1 = Drive mode (camera is separated and can be controlled by user input),\n2 = Cinematic mode (camera is controlled by predefined path).\n3 = Follow mode (Camera is following the player but not rotating, useful when strafing on gel).\n", "isCommand": false, "max": 3, "min": 0, "name": "sar_cam_control"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "When set, achievement tracker ignores coop-specific achievements.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_achievement_tracker_ignore_coop"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables achievement tracker toasts (using tag \"achievements\").\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_achievement_tracker_show"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Prevents Entity Handle Misinterpretation (EHM) from happening.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_prevent_ehm"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Patches Crouch Flying Glitch.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_patch_cfg"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Patches bhop by limiting wish direction if your velocity is too high.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_patch_bhop"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "When ducking, forces view offset to always be at standing height. Requires sv_cheats to work.\n", "isCommand": false, "max": 1, "min": 0, "name": "sar_force_qc"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Print all entity inputs to console.\n", "isCommand": false, "name": "sar_show_entinp"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Automatically stops recording demos when the leaderboard opens after a CM run. If 2, automatically appends the run time to the demo name.\n", "isCommand": false, "max": 3, "min": 0, "name": "sar_challenge_autostop"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Shortens loading times by preventing state snapshot recomputation.\n", "isCommand": false, "name": "sar_prevent_mat_snapshot_recompute"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Disables excessive usage of progress bar.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_disable_progress_bar_update"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Does not yield the CPU when game is not focused.\n", "isCommand": false, "name": "sar_disable_no_focus_sleep"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Prevents pauses from steam overlay.\n", "isCommand": false, "name": "sar_disable_steam_pause"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Allows duck-jumping even when fully crouched, similar to prevent_crouch_jump.\n", "isCommand": false, "name": "sar_duckjump"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables more air-control on the server.\n", "isCommand": false, "max": 2, "min": 0, "name": "sar_aircontrol"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables special game movement on the server.\n0 = Default,\n1 = Orange Box Engine,\n2 = Pre-OBE.\n", "isCommand": false, "min": 0, "name": "sar_jumpboost"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Ensures a successful slope boost.\n", "isCommand": false, "name": "sar_ensure_slope_boost"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Automatically strafes in your current wishdir.\n", "isCommand": false, "name": "sar_autostrafe"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables automatic jumping on the server.\n", "isCommand": false, "name": "sar_autojump"},
{"default": "0", "flags": 0, "flagsStr": "none", "helpStr": "Enables or disables automatic demo recording.\n", "isCommand": false, "max": 1, "min": -1, "name": "sar_autorecord"}]
